<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script src="https://js.tappaysdk.com/sdk/tpdirect/v5.14.0"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
      integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"
      crossorigin="anonymous"
    />

    <title>Connect payment with TapPay</title>
    <style>
      body {
        margin: 100px 0;
      }
      .container {
        max-width: 450px;
      }
      form {
        padding: 20px;
      }
      #payment-title {
        padding-left: 30px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <form id="payment-form" onsubmit="event.preventDefault(); onClick();">
        <div id="orders">
          <h2>請於5分鐘內付款完畢</h2>
          <h3 class="showName">活動名稱: <%= orderData.showInfo[0].name %></h3>
          <h3 class="showTime">
            活動時間: <%= orderData.showInfo[0].show_time %>
          </h3>
          <h3 class="showSection">
            地點: <%= orderData.showInfo[0].hall_name %>
          </h3>
          <h3>訂單編號：</h3>
          <h3 class="orderId"><%= orderData.orderId %></h3>

          <h3>總金額：</h3>
          <h3 class="total"><%= orderData.totalPrice %></h3>
          <% orderData.orders.forEach((order) => { %>
          <p class="seat">
            座位: <%= order.seat_row %><%= order.seat_number %>
          </p>
          <p class="price">NTD: <%= order.price %></p>
          <p class="section">區域: <%= order.section %></p>
          <% }); %>
          <input type="hidden" name="username" value="<%= user.username %>" />
          <input type="hidden" name="email" value="<%= user.email %>" />
          <input type="hidden" name="name" value="<%= orderData.orderId %>" />
        </div>

        <div class="form_field-name">地址</div>
        <input class="form_field-input" name="address" value />
        <div class="form_field-name">手機</div>
        <input class="form_field-input" name="phone" value />
        <h3 class="payment-title">輸入付款資訊</h3>
        <div class="form-group card-number-group">
          <label for="card-number" class="control-label"
            ><span id="cardtype"></span>卡號</label
          >
          <div class="form-control card-number"></div>
        </div>
        <div class="form-group expiration-date-group">
          <label for="expiration-date" class="control-label">卡片到期日</label>
          <div
            class="form-control expiration-date"
            id="tappay-expiration-date"
          ></div>
        </div>
        <div class="form-group ccv-group">
          <label for="ccv" class="control-label">卡片後三碼</label>
          <div class="form-control ccv"></div>
        </div>

        <button type="submit" id="submit-button">Pay</button>
      </form>
      <form id="deleteOrder" onsubmit="click();">
        <button type="submit">取消訂單</button>
      </form>
    </div>
  </body>
  <script>
    // const paymentData = axios
    //   .get("/ticket/checkout")
    //   .then((res) => console.log(res));

    // async function getPaymentData() {
    //   const paymentData = await axios.get("/ticket/checkout");
    // }
    // getPaymentData();

    const btn = document.getElementById("submit-button");
    const form = document.getElementById("payment-form");
    const orderForm = document.getElementById("deleteOrder");
    const orderId = document.querySelector(".orderId");
    const orderIdValue = orderId.innerText;
    const total = document.querySelector(".total");
    const totalValue = total.innerText;

    btn.addEventListener("click", function handleClick() {
      btn.textContent = "Please wait...";
    });

    orderForm.addEventListener("submit", async function (e) {
      e.preventDefault();

      const formData = new FormData(orderForm);

      try {
        const orderId = "<%= orderData.orderId %>";
        const res = await axios.delete(`/order?id=${orderId}`, formData);
        if (res.data.message === "Order is canceled") {
          alert("已超過時間，訂單已取消");
        }

        window.location.assign("/");
      } catch (err) {
        console.log(err);
      }
    });

    TPDirect.setupSDK(
      11327,
      "app_whdEWBH8e8Lzy4N6BysVRRMILYORF6UxXbiOFsICkz0J9j1C0JUlCHv1tVJC",
      "sandbox"
    );

    TPDirect.card.setup({
      fields: {
        number: {
          element: ".card-number",
          placeholder: "**** **** **** ****",
        },
        expirationDate: {
          element: ".expiration-date",
          placeholder: "MM / YY",
        },
        ccv: {
          element: ".ccv",
          placeholder: "後三碼",
        },
      },
      isMaskCreditCardNumber: true,
      maskCreditCardNumberRange: {
        beginIndex: 6,
        endIndex: 11,
      },
    });
    const submitButton = document.querySelector("#submit-button");
    const cardViewContainer = document.querySelector("#container");

    function onClick() {
      const formData = new FormData(form);
      formData.append("orderId", orderIdValue);
      formData.append("total", totalValue);
      const entFormData = Object.fromEntries(formData);

      const token = document.cookie.replace(
        /(?:(?:^|.*;\s*)jwtoken\s*=\s*([^;]*).*$)|^.*$/,
        "$1"
      );

      TPDirect.card.getPrime(async (result) => {
        if (result.status !== 0) {
          return;
        }

        const { prime } = result.card;

        try {
          const data = {
            prime,
            token,
            order: entFormData,
          };

          const goQueue = await axios.post("/queue", data);
          console.log(goQueue.status);
          if (goQueue.data.message === "Order is canceled") {
            alert("已超過付款時間，請重新購票");
            window.location.assign(`/`);
          }

          async function shortPolling() {
            const result = await axios.post("/checkPaid", data);
            if (result.data.checkOrder === "Paid") {
              window.location.assign(`/order?id=${orderIdValue}`);
            }
            console.log("Short Polling");
          }
          setInterval(shortPolling, 500);
        } catch (err) {
          console.log(err);
        }
      });
    }
  </script>
</html>
